<?xml version="1.0" encoding="UTF-8" ?>

<schema name="equipment" version="1.6">


    <!-- If you remove this field, you must _also_ disable the update log in solrconfig.xml
      or Solr won't start. _version_ and update log are required for SolrCloud
   -->
    <field name="_version_" type="plong" indexed="true" stored="true"/>

    <!-- points to the root document of a block of nested documents. Required for nested
      document support, may be removed otherwise
   -->
    <field name="_root_" type="string" indexed="true" stored="false"/>

    <!-- Only remove the "id" field if you have a very good reason to. While not strictly
     required, it is highly recommended. A <uniqueKey> is present in almost all Solr
     installations. See the <uniqueKey> declaration below where <uniqueKey> is set to "id".
   -->
    <field name="id" type="string" indexed="true" stored="true" required="true" multiValued="false"/>

    <field name="equipment_id" type="pint" indexed="true" stored="true" omitNorms="true"/>
    <field name="name" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="name_sort" type="text_gen_sort" indexed="true" stored="true" omitNorms="true"/>
    <field name="name_search" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="name" dest="name_sort"/>
    <copyField source="name" dest="name_search"/>

    <field name="mes_name" type="text_en" indexed="true" stored="true" omitNorms="true"/>
    <field name="mes_name_sort" type="text_gen_sort" indexed="true" stored="true" omitNorms="true"/>
    <field name="mes_name_search" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="mes_name" dest="mes_name_sort"/>
    <copyField source="mes_name" dest="mes_name_search"/>

    <field name="number" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="number_sort" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="number_search" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="number" dest="number_sort"/>
    <copyField source="number" dest="number_search"/>

    <field name="default_name" type="text_en" indexed="true" stored="true" omitNorms="true"/>
    <field name="default_name_sort" type="text_gen_sort" indexed="true" stored="true" omitNorms="true"/>
    <field name="default_name_search" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="default_name" dest="default_name_sort"/>
    <copyField source="default_name" dest="default_name_search"/>

    <field name="serial_number" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="serial_number_sort" type="text_gen_sort" indexed="true" stored="true" omitNorms="true"/>
    <field name="serial_number_search" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>
    <copyField source="serial_number" dest="serial_number_sort"/>
    <copyField source="serial_number" dest="serial_number_search"/>

    <field name="vendor" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="vendor_sort" type="text_gen_sort" indexed="true" stored="true" omitNorms="true"/>
    <field name="vendor_search" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>
    <copyField source="vendor" dest="vendor_sort"/>
    <copyField source="vendor" dest="vendor_search"/>

    <field name="ownership" type="pint" indexed="true" stored="true" omitNorms="true"/>
    <field name="ownership_text" type="string" indexed="true" stored="true" omitNorms="true"/>

    <field name="room_id" type="pint" indexed="true" stored="true" omitNorms="true"/>
    <field name="room_name" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="room_name_sort" type="text_gen_sort" indexed="true" stored="true" omitNorms="true"/>
    <field name="room_name_search" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="room_name" dest="room_name_sort"/>
    <copyField source="room_name" dest="room_name_search"/>

    <field name="room_code" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="room_code_sort" type="text_gen_sort" indexed="true" stored="true" omitNorms="true"/>
    <field name="room_code_search" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="room_code" dest="room_code_sort"/>
    <copyField source="room_code" dest="room_code_search"/>

    <field name="room_description" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="room_description_search" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="room_description" dest="room_description_search"/>

    <field name="zone_id" type="pint" indexed="true" stored="true" omitNorms="true"/>
    <field name="zone_name" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="zone_name_sort" type="text_gen_sort" indexed="true" stored="true" omitNorms="true"/>
    <field name="zone_name_search" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="zone_name" dest="zone_name_sort"/>
    <copyField source="zone_name" dest="zone_name_search"/>

    <field name="zone_group_id" type="pint" indexed="true" stored="true" omitNorms="true"/>
    <field name="zone_group_name" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="zone_group_name_sort" type="text_gen_sort" indexed="true" stored="true" omitNorms="true"/>
    <field name="zone_group_name_search" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="zone_group_name" dest="zone_group_name_sort"/>
    <copyField source="zone_group_name" dest="zone_group_name_search"/>

    <field name="building_id" type="pint" indexed="true" stored="true" omitNorms="true"/>
    <field name="building_code" type="text_en" indexed="true" stored="true" omitNorms="true"/>
    <field name="building_code_sort" type="text_gen_sort" indexed="true" stored="true" omitNorms="true"/>
    <field name="building_code_search" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="building_code" dest="building_code_sort"/>
    <copyField source="building_code" dest="building_code_search"/>

    <field name="building_name" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="building_name_sort" type="text_gen_sort" indexed="true" stored="true" omitNorms="true"/>
    <field name="building_name_search" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="building_name" dest="building_name_sort"/>
    <copyField source="building_name" dest="building_name_search"/>

    <field name="site_id" type="pint" indexed="true" stored="true" omitNorms="true"/>
    <field name="site_code" type="text_en" indexed="true" stored="true" omitNorms="true"/>
    <field name="site_code_sort" type="text_gen_sort" indexed="true" stored="true" omitNorms="true"/>
    <field name="site_code_search" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="site_code" dest="site_code_sort"/>
    <copyField source="site_code" dest="site_code_search"/>

    <field name="site_name" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="site_name_sort" type="text_gen_sort" indexed="true" stored="true" omitNorms="true"/>
    <field name="site_name_search" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="site_name" dest="site_name_sort"/>
    <copyField source="site_name" dest="site_name_search"/>

    <field name="category_id" type="pint" indexed="true" stored="true" omitNorms="true" multiValued="true"/>
    <field name="category" type="string" indexed="true" stored="true" omitNorms="true" multiValued="true"/>
    <field name="category_search" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"
           multiValued="true"/>

    <copyField source="category" dest="category_search"/>

    <field name="type_id" type="pint" indexed="true" stored="true" omitNorms="true" multiValued="true"/>
    <field name="type" type="string" indexed="true" stored="true" omitNorms="true" multiValued="true"/>
    <field name="type_search" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"
           multiValued="true"/>

    <copyField source="type" dest="type_search"/>


    <field name="active" type="boolean" indexed="true" stored="true" omitNorms="true"/>
    <field name="active_text" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="active_in_mes" type="boolean" indexed="true" stored="true" omitNorms="true"/>
    <field name="active_in_mes_text" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="reservation_possible" type="boolean" indexed="true" stored="true" omitNorms="true"/>
    <field name="reservation_possible_text" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="training_possible" type="boolean" indexed="true" stored="true" omitNorms="true"/>
    <field name="training_possible_text" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="amount_of_modules" type="pint" indexed="true" stored="true" omitNorms="true"/>

    <field name="facility_id" type="pint" indexed="true" stored="true" omitNorms="true"/>
    <field name="facility_name" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="facility_name_sort" type="text_gen_sort" indexed="true" stored="true" omitNorms="true"/>
    <field name="facility_name_search" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>
    <copyField source="facility_name" dest="facility_name_sort"/>
    <copyField source="facility_name" dest="facility_name_search"/>

    <field name="facility_label" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="facility_label_sort" type="text_gen_sort" indexed="true" stored="true" omitNorms="true"/>
    <field name="facility_label_search" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>
    <copyField source="facility_label" dest="facility_label_sort"/>
    <copyField source="facility_label" dest="facility_label_search"/>

    <field name="area_id" type="pint" indexed="true" stored="true" omitNorms="true"/>
    <field name="area_name" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="area_name_sort" type="text_gen_sort" indexed="true" stored="true" omitNorms="true"/>
    <field name="area_name_search" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="area_name" dest="area_name_sort"/>
    <copyField source="area_name" dest="area_name_search"/>

    <field name="area_label" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="area_label_sort" type="text_gen_sort" indexed="true" stored="true" omitNorms="true"/>
    <field name="area_label_search" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>
    <copyField source="area_label" dest="area_label_sort"/>
    <copyField source="area_label" dest="area_label_search"/>

    <field name="date_created" type="pdate" indexed="true" stored="true" omitNorms="true"/>
    <field name="last_update" type="pdate" indexed="true" stored="true" omitNorms="true"/>

    <field name="status" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="status_sort" type="text_gen_sort" indexed="true" stored="true" omitNorms="true"/>
    <field name="status_search" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="status" dest="status_sort"/>
    <copyField source="status" dest="status_search"/>

    <field name="amount_of_trained_users" type="pint" indexed="true" stored="true" omitNorms="true"/>
    <field name="has_trained_users" type="boolean" indexed="true" stored="true" omitNorms="true"/>
    <field name="trained_users_id" type="pint" indexed="true" stored="true" omitNorms="true" multiValued="true"/>
    <field name="trained_users_name" type="string" indexed="true" stored="true" omitNorms="true" multiValued="true"/>

    <field name="amount_of_role_users" type="pint" indexed="true" stored="true" omitNorms="true"/>
    <field name="has_role_users" type="boolean" indexed="true" stored="true" omitNorms="true"/>
    <field name="role_users_id" type="pint" indexed="true" stored="true" omitNorms="true" multiValued="true"/>
    <field name="role_users_name" type="string" indexed="true" stored="true" omitNorms="true" multiValued="true"/>

    <field name="run_steps_on_equipment_total" type="pint" indexed="true" stored="true"/>
    <field name="run_steps_on_equipment_finished" type="pint" indexed="true" stored="true"/>
    <field name="run_steps_on_equipment_upcoming" type="pint" indexed="true" stored="true"/>
    <field name="runs_on_equipment_total" type="pint" indexed="true" stored="true"/>
    <field name="runs_on_equipment_finished" type="pint" indexed="true" stored="true"/>
    <field name="runs_on_equipment_upcoming" type="pint" indexed="true" stored="true"/>
    <field name="templates_on_equipment" type="pint" indexed="true" stored="true"/>
    <field name="template_steps_on_equipment" type="pint" indexed="true" stored="true"/>
    <field name="monitored_process_on_equipment" type="pint" indexed="true" stored="true"/>
    <field name="monitored_process_steps_on_equipment" type="pint" indexed="true" stored="true"/>
    <field name="recipes_on_equipment" type="pint" indexed="true" stored="true"/>
    <field name="process_equipments_on_equipment" type="pint" indexed="true" stored="true"/>

    <dynamicField name="property_*" type="string" indexed="true" stored="true"/>
    <dynamicField name="property_array_*" type="string" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="property_date_*" type="pdate" indexed="true" stored="true"/>
    <dynamicField name="property_integer_*" type="string" indexed="true" stored="true"/>

    <dynamicField name="property_min_*" type="pint" indexed="true" stored="true"/>
    <dynamicField name="property_max_*" type="pint" indexed="true" stored="true"/>

    <dynamicField name="property_friendly_value_*" type="string" indexed="true" stored="true"/>
    <dynamicField name="property_friendly_value_search_*" type="text_general" indexed="true" stored="true"/>
    <copyField source="property_friendly_value_*" dest="property_friendly_value_search_*"/>

    <uniqueKey>id</uniqueKey>

    <!-- field type definitions. The "name" attribute is
       just a label to be used by field definitions.  The "class"
       attribute and any other attributes determine the real
       behavior of the fieldType.
         Class names starting with "solr" refer to java classes in a
       standard package such as org.apache.solr.analysis
    -->

    <!-- sortMissingLast and sortMissingFirst attributes are optional attributes are
         currently supported on types that are sorted internally as strings
         and on numeric types.
       This includes "string", "boolean", "pint", "pfloat", "plong", "pdate", "pdouble".
       - If sortMissingLast="true", then a sort on this field will cause documents
         without the field to come after documents with the field,
         regardless of the requested sort order (asc or desc).
       - If sortMissingFirst="true", then a sort on this field will cause documents
         without the field to come before documents with the field,
         regardless of the requested sort order.
       - If sortMissingLast="false" and sortMissingFirst="false" (the default),
         then default lucene sorting will be used which places docs without the
         field first in an ascending sort and last in a descending sort.
    -->

    <!-- The StrField type is not analyzed, but indexed/stored verbatim. -->
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" docValues="true"/>
    <fieldType name="strings" class="solr.StrField" sortMissingLast="true" multiValued="true" docValues="true"/>

    <!-- boolean type: "true" or "false" -->
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
    <fieldType name="booleans" class="solr.BoolField" sortMissingLast="true" multiValued="true"/>

    <!--
      Numeric field types that index values using KD-trees.
      Point fields don't support FieldCache, so they must have docValues="true" if needed for sorting, faceting, functions, etc.
    -->
    <fieldType name="pint" class="solr.IntPointField" docValues="true"/>
    <fieldType name="pfloat" class="solr.FloatPointField" docValues="true"/>
    <fieldType name="plong" class="solr.LongPointField" docValues="true"/>
    <fieldType name="pdouble" class="solr.DoublePointField" docValues="true"/>

    <fieldType name="pints" class="solr.IntPointField" docValues="true" multiValued="true"/>
    <fieldType name="pfloats" class="solr.FloatPointField" docValues="true" multiValued="true"/>
    <fieldType name="plongs" class="solr.LongPointField" docValues="true" multiValued="true"/>
    <fieldType name="pdoubles" class="solr.DoublePointField" docValues="true" multiValued="true"/>
    <fieldType name="random" class="solr.RandomSortField" indexed="true"/>

    <!-- since fields of this type are by default not stored or indexed,
       any data added to them will be ignored outright.  -->
    <fieldType name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField"/>

    <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
         is a more restricted form of the canonical representation of dateTime
         http://www.w3.org/TR/xmlschema-2/#dateTime
         The trailing "Z" designates UTC time and is mandatory.
         Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
         All other components are mandatory.
         Expressions can also be used to denote calculations that should be
         performed relative to "NOW" to determine the value, ie...
               NOW/HOUR
                  ... Round to the start of the current hour
               NOW-1DAY
                  ... Exactly 1 day prior to now
               NOW/DAY+6MONTHS+3DAYS
                  ... 6 months and 3 days in the future from the start of
                      the current day
      -->
    <!-- KD-tree versions of date fields -->
    <fieldType name="pdate" class="solr.DatePointField" docValues="true"/>
    <fieldType name="pdates" class="solr.DatePointField" docValues="true" multiValued="true"/>

    <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
    <fieldType name="binary" class="solr.BinaryField"/>

    <!--
    RankFields can be used to store scoring factors to improve document ranking. They should be used
    in combination with RankQParserPlugin.
    (experimental)
    -->
    <fieldType name="rank" class="solr.RankField"/>

    <!-- solr.TextField allows the specification of custom text analyzers
         specified as a tokenizer and a list of token filters. Different
         analyzers may be specified for indexing and querying.
         The optional positionIncrementGap puts space between multiple fields of
         this type on the same document, with the purpose of preventing false phrase
         matching across fields.
         For more info on customizing your analyzer chain, please see
         https://solr.apache.org/guide/solr/latest/indexing-guide/document-analysis.html#using-analyzers-tokenizers-and-filters
     -->

    <!-- One can also specify an existing Analyzer class that has a
         default constructor via the class attribute on the analyzer element.
         Example:
    <fieldType name="text_greek" class="solr.TextField">
      <analyzer class="org.apache.lucene.analysis.el.GreekAnalyzer"/>
    </fieldType>
    -->

    <!-- A text field that only splits on whitespace for exact matching of words -->
    <dynamicField name="*_ws" type="text_ws" indexed="true" stored="true"/>
    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100">
        <analyzer>
            <tokenizer name="whitespace"/>
        </analyzer>
    </fieldType>

    <!-- A general text field that has reasonable, generic
         cross-language defaults: it tokenizes with StandardTokenizer,
         removes stop words from case-insensitive "stopwords.txt"
         (empty by default), and down cases.  At query time only, it
         also applies synonyms.
    -->
    <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100" multiValued="true">
        <analyzer type="index">
            <tokenizer name="standard"/>
            <filter name="stop" ignoreCase="true" words="stopwords.txt"/>
            <!-- in this example, we will only use synonyms at query time
            <filter name="synonymGraph" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
            <filter name="flattenGraph"/>
            -->
            <filter name="lowercase"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer name="standard"/>
            <filter name="stop" ignoreCase="true" words="stopwords.txt"/>
            <filter name="synonymGraph" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
            <filter name="lowercase"/>
        </analyzer>
    </fieldType>


    <!-- SortableTextField generaly functions exactly like TextField,
         except that it supports, and by default uses, docValues for sorting (or faceting)
         on the first 1024 characters of the original field values (which is configurable).
         This makes it a bit more useful then TextField in many situations, but the trade-off
         is that it takes up more space on disk; which is why it's not used in place of TextField
         for every fieldType in this _default schema.
    -->
    <dynamicField name="*_t_sort" type="text_gen_sort" indexed="true" stored="true" multiValued="false"/>
    <dynamicField name="*_txt_sort" type="text_gen_sort" indexed="true" stored="true"/>
    <fieldType name="text_gen_sort" class="solr.SortableTextField" positionIncrementGap="100" multiValued="true">
        <analyzer type="index">
            <tokenizer name="standard"/>
            <filter name="stop" ignoreCase="true" words="stopwords.txt"/>
            <filter name="lowercase"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer name="standard"/>
            <filter name="stop" ignoreCase="true" words="stopwords.txt"/>
            <filter name="synonymGraph" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
            <filter name="lowercase"/>
        </analyzer>
    </fieldType>

    <!-- A text field with defaults appropriate for English: it tokenizes with StandardTokenizer,
         removes English stop words (lang/stopwords_en.txt), down cases, protects words from protwords.txt, and
         finally applies Porter's stemming.  The query time analyzer also applies synonyms from synonyms.txt. -->
    <dynamicField name="*_txt_en" type="text_en" indexed="true" stored="true"/>
    <fieldType name="text_en" class="solr.TextField" positionIncrementGap="100">
        <analyzer type="index">
            <tokenizer name="standard"/>
            <!-- in this example, we will only use synonyms at query time
            <filter name="synonymGraph" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
            <filter name="flattenGraph"/>
            -->
            <!-- Case insensitive stop word removal.
            -->
            <filter name="stop"
                    ignoreCase="true"
                    words="lang/stopwords_en.txt"
            />
            <filter name="lowercase"/>
            <filter name="englishPossessive"/>
            <filter name="keywordMarker" protected="protwords.txt"/>
            <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
            <filter name="englishMinimalStem"/>
            -->
            <filter name="porterStem"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer name="standard"/>
            <filter name="synonymGraph" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
            <filter name="stop"
                    ignoreCase="true"
                    words="lang/stopwords_en.txt"
            />
            <filter name="lowercase"/>
            <filter name="englishPossessive"/>
            <filter name="keywordMarker" protected="protwords.txt"/>
            <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
            <filter name="englishMinimalStem"/>
            -->
            <filter name="porterStem"/>
        </analyzer>
    </fieldType>

    <!-- A text field with defaults appropriate for English, plus
         aggressive word-splitting and autophrase features enabled.
         This field is just like text_en, except it adds
         WordDelimiterGraphFilter to enable splitting and matching of
         words on case-change, alpha numeric boundaries, and
         non-alphanumeric chars.  This means certain compound word
         cases will work, for example query "wi fi" will match
         document "WiFi" or "wi-fi".
    -->
    <dynamicField name="*_txt_en_split" type="text_en_splitting" indexed="true" stored="true"/>
    <fieldType name="text_en_splitting" class="solr.TextField" positionIncrementGap="100"
               autoGeneratePhraseQueries="true">
        <analyzer type="index">
            <tokenizer name="whitespace"/>
            <!-- in this example, we will only use synonyms at query time
            <filter name="synonymGraph" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
            -->
            <!-- Case insensitive stop word removal.
            -->
            <filter name="stop"
                    ignoreCase="true"
                    words="lang/stopwords_en.txt"
            />
            <filter name="wordDelimiterGraph" generateWordParts="1" generateNumberParts="1" catenateWords="1"
                    catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
            <filter name="lowercase"/>
            <filter name="keywordMarker" protected="protwords.txt"/>
            <filter name="porterStem"/>
            <filter name="flattenGraph"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer name="whitespace"/>
            <filter name="synonymGraph" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
            <filter name="stop"
                    ignoreCase="true"
                    words="lang/stopwords_en.txt"
            />
            <filter name="wordDelimiterGraph" generateWordParts="1" generateNumberParts="1" catenateWords="0"
                    catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
            <filter name="lowercase"/>
            <filter name="keywordMarker" protected="protwords.txt"/>
            <filter name="porterStem"/>
        </analyzer>
    </fieldType>

    <!-- Less flexible matching, but less false matches.  Probably not ideal for product names,
         but may be good for SKUs.  Can insert dashes in the wrong place and still match. -->
    <dynamicField name="*_txt_en_split_tight" type="text_en_splitting_tight" indexed="true" stored="true"/>
    <fieldType name="text_en_splitting_tight" class="solr.TextField" positionIncrementGap="100"
               autoGeneratePhraseQueries="true">
        <analyzer type="index">
            <tokenizer name="whitespace"/>
            <filter name="synonymGraph" synonyms="synonyms.txt" ignoreCase="true" expand="false"/>
            <filter name="stop" ignoreCase="true" words="lang/stopwords_en.txt"/>
            <filter name="wordDelimiterGraph" generateWordParts="0" generateNumberParts="0" catenateWords="1"
                    catenateNumbers="1" catenateAll="0"/>
            <filter name="lowercase"/>
            <filter name="keywordMarker" protected="protwords.txt"/>
            <filter name="englishMinimalStem"/>
            <!-- this filter can remove any duplicate tokens that appear at the same position - sometimes
                 possible with WordDelimiterGraphFilter in conjuncton with stemming. -->
            <filter name="removeDuplicates"/>
            <filter name="flattenGraph"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer name="whitespace"/>
            <filter name="synonymGraph" synonyms="synonyms.txt" ignoreCase="true" expand="false"/>
            <filter name="stop" ignoreCase="true" words="lang/stopwords_en.txt"/>
            <filter name="wordDelimiterGraph" generateWordParts="0" generateNumberParts="0" catenateWords="1"
                    catenateNumbers="1" catenateAll="0"/>
            <filter name="lowercase"/>
            <filter name="keywordMarker" protected="protwords.txt"/>
            <filter name="englishMinimalStem"/>
            <!-- this filter can remove any duplicate tokens that appear at the same position - sometimes
                 possible with WordDelimiterGraphFilter in conjuncton with stemming. -->
            <filter name="removeDuplicates"/>
        </analyzer>
    </fieldType>

    <!-- Just like text_general except it reverses the characters of
         each token, to enable more efficient leading wildcard queries.
    -->
    <dynamicField name="*_txt_rev" type="text_general_rev" indexed="true" stored="true"/>
    <fieldType name="text_general_rev" class="solr.TextField" positionIncrementGap="100">
        <analyzer type="index">
            <tokenizer name="standard"/>
            <filter name="stop" ignoreCase="true" words="stopwords.txt"/>
            <filter name="lowercase"/>
            <filter name="reversedWildcard" withOriginal="true"
                    maxPosAsterisk="3" maxPosQuestion="2" maxFractionAsterisk="0.33"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer name="standard"/>
            <filter name="synonymGraph" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
            <filter name="stop" ignoreCase="true" words="stopwords.txt"/>
            <filter name="lowercase"/>
        </analyzer>
    </fieldType>

    <dynamicField name="*_phon_en" type="phonetic_en" indexed="true" stored="true"/>
    <fieldType name="phonetic_en" stored="false" indexed="true" class="solr.TextField">
        <analyzer>
            <tokenizer name="standard"/>
            <filter name="doubleMetaphone" inject="false"/>
        </analyzer>
    </fieldType>

    <!-- lowercases the entire field value, keeping it as a single token.  -->
    <dynamicField name="*_s_lower" type="lowercase" indexed="true" stored="true"/>
    <fieldType name="lowercase" class="solr.TextField" positionIncrementGap="100">
        <analyzer>
            <tokenizer name="keyword"/>
            <filter name="lowercase"/>
        </analyzer>
    </fieldType>

    <!-- This point type indexes the coordinates as separate fields (subFields)
      If subFieldType is defined, it references a type, and a dynamic field
      definition is created matching *___<typename>.  Alternately, if
      subFieldSuffix is defined, that is used to create the subFields.
      Example: if subFieldType="double", then the coordinates would be
        indexed in fields myloc_0___double,myloc_1___double.
      Example: if subFieldSuffix="_d" then the coordinates would be indexed
        in fields myloc_0_d,myloc_1_d
      The subFields are an implementation detail of the fieldType, and end
      users normally should not need to know about them.
     -->
    <dynamicField name="*_point" type="point" indexed="true" stored="true"/>
    <fieldType name="point" class="solr.PointType" dimension="2" subFieldSuffix="_d"/>

    <!-- A specialized field for geospatial search filters and distance sorting. -->
    <fieldType name="location" class="solr.LatLonPointSpatialField" docValues="true"/>

    <!-- A geospatial field type that supports multiValued and polygon shapes.
      For more information about this and other spatial fields see:
      https://solr.apache.org/guide/solr/latest/query-guide/spatial-search.html
    -->
    <fieldType name="location_rpt" class="solr.SpatialRecursivePrefixTreeFieldType"
               geo="true" distErrPct="0.025" maxDistErr="0.001" distanceUnits="kilometers"/>

    <!-- Payloaded field types -->
    <fieldType name="delimited_payloads_float" stored="false" indexed="true" class="solr.TextField">
        <analyzer>
            <tokenizer name="whitespace"/>
            <filter name="delimitedPayload" encoder="float"/>
        </analyzer>
    </fieldType>
    <fieldType name="delimited_payloads_int" stored="false" indexed="true" class="solr.TextField">
        <analyzer>
            <tokenizer name="whitespace"/>
            <filter name="delimitedPayload" encoder="integer"/>
        </analyzer>
    </fieldType>
    <fieldType name="delimited_payloads_string" stored="false" indexed="true" class="solr.TextField">
        <analyzer>
            <tokenizer name="whitespace"/>
            <filter name="delimitedPayload" encoder="identity"/>
        </analyzer>
    </fieldType>

    <!-- some examples for different languages (generally ordered by ISO code) -->

    <!-- Dutch -->
    <dynamicField name="*_txt_nl" type="text_nl" indexed="true" stored="true"/>
    <fieldType name="text_nl" class="solr.TextField" positionIncrementGap="100">
        <analyzer>
            <tokenizer name="standard"/>
            <filter name="lowercase"/>
            <filter name="stop" ignoreCase="true" words="lang/stopwords_nl.txt" format="snowball"/>
            <filter name="stemmerOverride" dictionary="lang/stemdict_nl.txt" ignoreCase="false"/>
            <filter name="snowballPorter" language="Dutch"/>
        </analyzer>
    </fieldType>

</schema>
