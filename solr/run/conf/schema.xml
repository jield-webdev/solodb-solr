<?xml version="1.0" encoding="UTF-8" ?>

<schema name="run" version="1.5">

    <field name="_version_" type="long" indexed="true" stored="true"/>

    <!-- points to the root document of a block of nested documents. Required for nested
      document support, may be removed otherwise
   -->
    <field name="_root_" type="string" indexed="true" stored="false"/>

    <!-- Only remove the "id" field if you have a very good reason to. While not strictly
     required, it is highly recommended. A <uniqueKey> is present in almost all Solr
     installations. See the <uniqueKey> declaration below where <uniqueKey> is set to "id".
   -->
    <field name="id" type="string" indexed="true" stored="true" required="true" multiValued="false"/>

    <field name="run_id" type="int" indexed="true" stored="true" omitNorms="true"/>
    <field name="label_sort" type="int" indexed="true" stored="true" omitNorms="true"/>

    <field name="label" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>
    <field name="label_search" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="label" dest="label_search" />

    <field name="label_sub_sort" type="int" indexed="true" stored="true" omitNorms="true"/>
    <field name="label_year" type="int" indexed="true" stored="true" omitNorms="true"/>

    <field name="run_number" type="int" indexed="true" stored="true" omitNorms="true"/>

    <field name="name" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="name_sort" type="string_ci" indexed="true" stored="true" omitNorms="true"/>
    <field name="name_search" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="name" dest="name_sort" />
    <copyField source="name" dest="name_search" />

    <field name="motivation" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true"/>
    <field name="motivation_search" type="text_general" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="motivation" dest="motivation_search" />

    <field name="objective" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true"/>
    <field name="method" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true"/>
    <field name="conclusion" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true"/>
    <field name="key_results" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true"/>
    <field name="remarks" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>

    <field name="amount_of_steps" type="int" indexed="true" stored="true" omitNorms="true"/>
    <field name="amount_of_finished_steps" type="int" indexed="true" stored="true" omitNorms="true"/>
    <field name="amount_of_requirements" type="int" indexed="true" stored="true" omitNorms="true"/>

    <field name="keywords" type="string" indexed="true" stored="true" omitNorms="true" multiValued="true"/>

    <field name="parts" type="string" indexed="true" stored="true" omitNorms="true" multiValued="true"/>

    <field name="date_created" type="date" indexed="true" stored="true" omitNorms="true"/>
    <field name="start_date" type="date" indexed="true" stored="true" omitNorms="true"/>
    <field name="last_update" type="date" indexed="true" stored="true" omitNorms="true"/>
    <field name="finish_date" type="date" indexed="true" stored="true" omitNorms="true"/>

    <field name="last_finished_step_date" type="date" indexed="true" stored="true" omitNorms="true"/>

    <field name="last_finished_step_name" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="last_finished_step_name_search" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true"/>
    <field name="last_finished_step_name_sort" type="string_ci" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="last_finished_step_name" dest="last_finished_step_name_search" />
    <copyField source="last_finished_step_name" dest="last_finished_step_name_sort" />

    <field name="last_finished_step_process_name" type="string" indexed="true" stored="true" omitNorms="true"/>

    <field name="last_finished_step_equiment_id" type="int" indexed="true" stored="true" omitNorms="true"/>
    <field name="last_finished_step_equiment_name" type="string_ci" indexed="true" stored="true" omitNorms="true"/>
    <field name="last_finished_step_equiment_module_id" type="int" indexed="true" stored="true" omitNorms="true"/>
    <field name="last_finished_step_equiment_module_name" type="string_ci" indexed="true" stored="true" omitNorms="true"/>


    <field name="first_unfinished_step_name" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="first_unfinished_step_name_search" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true"/>
    <field name="first_unfinished_step_name_sort" type="string_ci" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="first_unfinished_step_name" dest="first_unfinished_step_name_search" />
    <copyField source="first_unfinished_step_name" dest="first_unfinished_step_name_sort" />

    <field name="first_unfinished_step_process_name" type="string" indexed="true" stored="true" omitNorms="true"/>

    <field name="first_unfinished_step_equiment_id" type="int" indexed="true" stored="true" omitNorms="true"/>
    <field name="first_unfinished_step_equiment_name" type="string_ci" indexed="true" stored="true" omitNorms="true"/>
    <field name="first_unfinished_step_equiment_module_id" type="int" indexed="true" stored="true" omitNorms="true"/>
    <field name="first_unfinished_step_equiment_module_name" type="string_ci" indexed="true" stored="true" omitNorms="true"/>

    <field name="first_unfinished_step_recipe_id" type="int" indexed="true" stored="true" omitNorms="true"/>
    <field name="first_unfinished_step_recipe_name" type="string" indexed="true" stored="true" omitNorms="true"/>

    <field name="first_unfinished_step_checklist_total_steps" type="int" indexed="true" stored="true" omitNorms="true"/>
    <field name="first_unfinished_step_checklist_executed_steps" type="int" indexed="true" stored="true"
           omitNorms="true"/>


    <field name="user_id" type="int" indexed="true" stored="true" omitNorms="true"/>
    <field name="user" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="user_sort" type="string_ci" indexed="true" stored="true" omitNorms="true"/>
    <field name="user_search" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="user" dest="user_sort" />
    <copyField source="user" dest="user_search" />

    <field name="project_id" type="int" indexed="true" stored="true" omitNorms="true"/>
    <field name="project" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="project_sort" type="string_ci" indexed="true" stored="true" omitNorms="true"/>
    <field name="project_search" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="project" dest="project_sort" />
    <copyField source="project" dest="project_search" />

    <field name="team" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="team_search" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="team" dest="team_search" />

    <field name="group" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="group_search" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true"/>

    <copyField source="group" dest="group_search" />

    <field name="status" type="string" indexed="true" stored="true" omitNorms="true"/>

    <field name="process_id" type="int" indexed="true" stored="true" omitNorms="true" multiValued="true"/>
    <field name="process" type="string" indexed="true" stored="true" omitNorms="true" multiValued="true"/>
    <field name="process_search" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true" multiValued="true"/>
    <field name="process_sort" type="string_ci" indexed="true" stored="true" omitNorms="true" multiValued="true"/>

    <copyField source="process" dest="process_search" />
    <copyField source="process" dest="process_sort" />

    <field name="process_module_id" type="int" indexed="true" stored="true" omitNorms="true" multiValued="true"/>

    <field name="equipment_id" type="int" indexed="true" stored="true" omitNorms="true" multiValued="true"/>
    <field name="equipment" type="string" indexed="true" stored="true" omitNorms="true" multiValued="true"/>
    <field name="equipment_search" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true" multiValued="true"/>
    <field name="equipment_sort" type="string_ci" indexed="true" stored="true" omitNorms="true" multiValued="true"/>

    <copyField source="equipment" dest="equipment_search" />
    <copyField source="equipment" dest="equipment_sort" />

    <field name="equipment_module_id" type="int" indexed="true" stored="true" omitNorms="true" multiValued="true"/>
    <field name="equipment_module" type="string" indexed="true" stored="true" omitNorms="true" multiValued="true"/>
    <field name="equipment_module_search" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true" multiValued="true"/>
    <field name="equipment_module_sort" type="string_ci" indexed="true" stored="true" omitNorms="true" multiValued="true"/>

    <copyField source="equipment_module" dest="equipment_module_search" />
    <copyField source="equipment_module" dest="equipment_module_sort" />

    <field name="involved_users" type="int" indexed="true" stored="true" multiValued="true"/>

    <field name="equipment_trained_users" type="int" indexed="true" stored="true" multiValued="true"/>
    <field name="equipment_role_users" type="int" indexed="true" stored="true" multiValued="true"/>

    <!-- catchall field, containing all other searchable text fields (implemented
        via copyField further on in this schema  -->
    <field name="text" type="text_general" indexed="true" stored="false" multiValued="true"/>

    <!-- catchall text field that indexes tokens both normally and in reverse for efficient
        leading wildcard queries. -->
    <field name="text_rev" type="text_general_rev" indexed="true" stored="false" multiValued="true"/>

    <dynamicField name="*_i" type="int" indexed="true" stored="true"/>
    <dynamicField name="*_is" type="int" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="*_s" type="string" indexed="true" stored="true"/>
    <dynamicField name="*_ss" type="string" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="*_l" type="long" indexed="true" stored="true"/>
    <dynamicField name="*_ls" type="long" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="*_t" type="text_general" indexed="true" stored="true"/>
    <dynamicField name="*_txt" type="text_general" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="*_en" type="text_en" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="*_b" type="boolean" indexed="true" stored="true"/>
    <dynamicField name="*_bs" type="boolean" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="*_f" type="float" indexed="true" stored="true"/>
    <dynamicField name="*_fs" type="float" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="*_d" type="double" indexed="true" stored="true"/>
    <dynamicField name="*_ds" type="double" indexed="true" stored="true" multiValued="true"/>

    <!-- Type used to index the lat and lon components for the "location" FieldType -->
    <dynamicField name="*_coordinate" type="tdouble" indexed="true" stored="false"/>

    <dynamicField name="*_dt" type="date" indexed="true" stored="true"/>
    <dynamicField name="*_dts" type="date" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="*_p" type="location" indexed="true" stored="true"/>

    <!-- some trie-coded dynamic fields for faster range queries -->
    <dynamicField name="*_ti" type="tint" indexed="true" stored="true"/>
    <dynamicField name="*_tl" type="tlong" indexed="true" stored="true"/>
    <dynamicField name="*_tf" type="tfloat" indexed="true" stored="true"/>
    <dynamicField name="*_td" type="tdouble" indexed="true" stored="true"/>
    <dynamicField name="*_tdt" type="tdate" indexed="true" stored="true"/>

    <dynamicField name="*_c" type="currency" indexed="true" stored="true"/>

    <dynamicField name="ignored_*" type="ignored" multiValued="true"/>
    <dynamicField name="attr_*" type="text_general" indexed="true" stored="true" multiValued="true"/>

    <dynamicField name="random_*" type="random"/>

    <uniqueKey>id</uniqueKey>

    <fieldType name="string" class="solr.StrField" sortMissingLast="true"/>
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
    <fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" positionIncrementGap="0"/>

    <fieldType name="tint" class="solr.TrieIntField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="date" class="solr.TrieDateField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="tdate" class="solr.TrieDateField" precisionStep="6" positionIncrementGap="0"/>
    <fieldType name="binary" class="solr.BinaryField"/>
    <fieldType name="random" class="solr.RandomSortField" indexed="true"/>
    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100">
        <analyzer>
            <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        </analyzer>
    </fieldType>

    <fieldType name="text_general_edge_ngram" class="solr.TextField" positionIncrementGap="100">
        <analyzer type="index">
            <tokenizer class="solr.LowerCaseTokenizerFactory"/>
            <filter class="solr.EdgeNGramFilterFactory" minGramSize="2" maxGramSize="15"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer class="solr.LowerCaseTokenizerFactory"/>
        </analyzer>
    </fieldType>
    <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
        <analyzer type="index">
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
            <!-- in this example, we will only use synonyms at query time
        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
        -->
            <filter class="solr.LowerCaseFilterFactory"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
            <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
            <filter class="solr.LowerCaseFilterFactory"/>
        </analyzer>
    </fieldType>

    <fieldType name="string_ci" class="solr.TextField"
               sortMissingLast="true" omitNorms="true">
        <analyzer>
            <tokenizer class="solr.KeywordTokenizerFactory"/>
            <filter class="solr.LowerCaseFilterFactory"/>
        </analyzer>
    </fieldType>

    <!-- A text field with defaults appropriate for English: it
         tokenizes with StandardTokenizer, removes English stop words
         (lang/stopwords_en.txt), down cases, protects words from protwords.txt, and
         finally applies Porter's stemming.  The query time analyzer
         also applies synonyms from synonyms.txt. -->
    <fieldType name="text_en" class="solr.TextField" positionIncrementGap="100">
        <analyzer type="index">
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <!-- in this example, we will only use synonyms at query time
        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
        -->
            <!-- Case insensitive stop word removal.
        -->
            <filter class="solr.StopFilterFactory"
                    ignoreCase="true"
                    words="lang/stopwords_en.txt"
            />
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.EnglishPossessiveFilterFactory"/>
            <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
            <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
        <filter class="solr.EnglishMinimalStemFilterFactory"/>
    -->
            <filter class="solr.PorterStemFilterFactory"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
            <filter class="solr.StopFilterFactory"
                    ignoreCase="true"
                    words="lang/stopwords_en.txt"
            />
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.EnglishPossessiveFilterFactory"/>
            <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
            <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
        <filter class="solr.EnglishMinimalStemFilterFactory"/>
    -->
            <filter class="solr.PorterStemFilterFactory"/>
        </analyzer>
    </fieldType>
    <fieldType name="text_en_splitting" class="solr.TextField" positionIncrementGap="100"
               autoGeneratePhraseQueries="true">
        <analyzer type="index">
            <tokenizer class="solr.WhitespaceTokenizerFactory"/>
            <!-- in this example, we will only use synonyms at query time
        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
        -->
            <!-- Case insensitive stop word removal.
        -->
            <filter class="solr.StopFilterFactory"
                    ignoreCase="true"
                    words="lang/stopwords_en.txt"
            />
            <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1"
                    catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
            <filter class="solr.PorterStemFilterFactory"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer class="solr.WhitespaceTokenizerFactory"/>
            <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
            <filter class="solr.StopFilterFactory"
                    ignoreCase="true"
                    words="lang/stopwords_en.txt"
            />
            <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1"
                    catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
            <filter class="solr.PorterStemFilterFactory"/>
        </analyzer>
    </fieldType>


    <!-- Just like text_general except it reverses the characters of
     each token, to enable more efficient leading wildcard queries. -->
    <fieldType name="text_general_rev" class="solr.TextField" positionIncrementGap="100">
        <analyzer type="index">
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.ReversedWildcardFilterFactory" withOriginal="true"
                    maxPosAsterisk="3" maxPosQuestion="2" maxFractionAsterisk="0.33"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
            <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
            <filter class="solr.LowerCaseFilterFactory"/>
        </analyzer>
    </fieldType>

    <!-- charFilter + WhitespaceTokenizer  -->
    <!--
    <fieldType name="text_char_norm" class="solr.TextField" positionIncrementGap="100" >
      <analyzer>
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
      </analyzer>
    </fieldType>
    -->

    <!-- This is an example of using the KeywordTokenizer along
         With various TokenFilterFactories to produce a sortable field
         that does not include some properties of the source text
      -->
    <fieldType name="alphaOnlySort" class="solr.TextField" sortMissingLast="true" omitNorms="true">
        <analyzer>
            <!-- KeywordTokenizer does no actual tokenizing, so the entire
             input string is preserved as a single token
          -->
            <tokenizer class="solr.KeywordTokenizerFactory"/>
            <!-- The LowerCase TokenFilter does what you expect, which can be
             when you want your sorting to be case insensitive
          -->
            <filter class="solr.LowerCaseFilterFactory"/>
            <!-- The TrimFilter removes any leading or trailing whitespace -->
            <filter class="solr.TrimFilterFactory"/>
            <!-- The PatternReplaceFilter gives you the flexibility to use
             Java Regular expression to replace any sequence of characters
             matching a pattern with an arbitrary replacement string,
             which may include back references to portions of the original
             string matched by the pattern.

             See the Java Regular Expression documentation for more
             information on pattern and replacement string syntax.

             http://docs.oracle.com/javase/7/docs/api/java/util/regex/package-summary.html
          -->
            <filter class="solr.PatternReplaceFilterFactory"
                    pattern="([^a-z])" replacement="" replace="all"
            />
        </analyzer>
    </fieldType>


    <!--
      Example of using PathHierarchyTokenizerFactory at index time, so
      queries for paths match documents at that path, or in descendent paths
    -->
    <fieldType name="descendent_path" class="solr.TextField">
        <analyzer type="index">
            <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer class="solr.KeywordTokenizerFactory"/>
        </analyzer>
    </fieldType>
    <!--
      Example of using PathHierarchyTokenizerFactory at query time, so
      queries for paths match documents at that path, or in ancestor paths
    -->
    <fieldType name="ancestor_path" class="solr.TextField">
        <analyzer type="index">
            <tokenizer class="solr.KeywordTokenizerFactory"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
        </analyzer>
    </fieldType>

    <!-- since fields of this type are by default not stored or indexed,
         any data added to them will be ignored outright.  -->
    <fieldType name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField"/>

    <!-- This point type indexes the coordinates as separate fields (subFields)
      If subFieldType is defined, it references a type, and a dynamic field
      definition is created matching *___<typename>.  Alternately, if
      subFieldSuffix is defined, that is used to create the subFields.
      Example: if subFieldType="double", then the coordinates would be
        indexed in fields myloc_0___double,myloc_1___double.
      Example: if subFieldSuffix="_d" then the coordinates would be indexed
        in fields myloc_0_d,myloc_1_d
      The subFields are an implementation detail of the fieldType, and end
      users normally should not need to know about them.
     -->
    <fieldType name="point" class="solr.PointType" dimension="2" subFieldSuffix="_d"/>

    <!-- A specialized field for geospatial search. If indexed, this fieldType must not be multivalued. -->
    <fieldType name="location" class="solr.LatLonType" subFieldSuffix="_coordinate"/>


    <!-- An alternative geospatial field type new to Solr 4.  It supports multiValued and polygon shapes.
      For more information about this and other Spatial fields new to Solr 4, see:
      http://wiki.apache.org/solr/SolrAdaptersForLuceneSpatial4
    -->
    <fieldType name="location_rpt" class="solr.SpatialRecursivePrefixTreeFieldType"
               geo="true" distErrPct="0.025" maxDistErr="0.001" distanceUnits="kilometers"/>

    <!-- Money/currency field type. See http://wiki.apache.org/solr/MoneyFieldType
        Parameters:
          defaultCurrency: Specifies the default currency if none specified. Defaults to "USD"
          precisionStep:   Specifies the precisionStep for the TrieLong field used for the amount
          providerClass:   Lets you plug in other exchange provider backend:
                           solr.FileExchangeRateProvider is the default and takes one parameter:
                             currencyConfig: name of an xml file holding exchange rates
                           solr.OpenExchangeRatesOrgProvider uses rates from openexchangerates.org:
                             ratesFileLocation: URL or path to rates JSON file (default latest.json on the web)
                             refreshInterval: Number of minutes between each rates fetch (default: 1440, min: 60)
   -->
    <fieldType name="currency" class="solr.CurrencyField" precisionStep="8" defaultCurrency="USD"
               currencyConfig="currency.xml"/>


    <!-- Similarity is the scoring routine for each document vs. a query.
       A custom Similarity or SimilarityFactory may be specified here, but
       the default is fine for most applications.
       For more info: http://wiki.apache.org/solr/SchemaXml#Similarity
    -->
    <!--
     <similarity class="com.example.solr.CustomSimilarityFactory">
       <str name="paramkey">param value</str>
     </similarity>
    -->

</schema>
