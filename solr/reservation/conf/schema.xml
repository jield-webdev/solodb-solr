<?xml version="1.0" encoding="UTF-8" ?>

<schema name="reservation" version="1.5">
    <field name="_version_" type="long" indexed="true" stored="true"/>
    <field name="_root_" type="string" indexed="true" stored="false"/>

    <field name="id" type="string" indexed="true" stored="true" required="true" multiValued="false"/>

    <field name="reservation_id" type="int" indexed="true" stored="true" omitNorms="true"/>

    <field name="title" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="title_sort" type="string_ci" indexed="true" stored="true" omitNorms="true"/>
    <field name="title_search" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true"/>
    <field name="description" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="description_sort" type="string_ci" indexed="true" stored="true" omitNorms="true"/>
    <field name="description_search" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true"/>

    <field name="date_created" type="date" indexed="true" stored="true" omitNorms="true"/>
    <field name="date_updated" type="date" indexed="true" stored="true" omitNorms="true"/>
    <field name="date_start" type="date" indexed="true" stored="true" omitNorms="true"/>
    <field name="date_end" type="date" indexed="true" stored="true" omitNorms="true"/>
    <field name="date_approved" type="date" indexed="true" stored="true" omitNorms="true"/>

    <field name="days_of_week" type="text" indexed="true" stored="true" omitNorms="true" multiValued="true"/>
    <field name="days_of_week_search" type="string_ci" indexed="true" stored="true" omitNorms="true"
           multiValued="true"/>

    <field name="require_approval" type="boolean" indexed="true" stored="true" omitNorms="true"/>
    <field name="require_approval_text" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="is_approved" type="boolean" indexed="true" stored="true" omitNorms="true"/>
    <field name="is_approved_text" type="string" indexed="true" stored="true" omitNorms="true"/>

    <field name="is_block" type="boolean" indexed="true" stored="true" omitNorms="true"/>
    <field name="is_block_text" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="block_id" type="int" indexed="true" stored="true" omitNorms="true"/>

    <field name="user_id" type="int" indexed="true" stored="true" omitNorms="true"/>
    <field name="user" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="user_sort" type="string_ci" indexed="true" stored="true" omitNorms="true"/>
    <field name="user_search" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true"/>

    <field name="run_id" type="int" indexed="true" stored="true" omitNorms="true"/>
    <field name="run_label" type="text_en_splitting" indexed="true" stored="true" omitNorms="true"/>
    <field name="run_label_sort" type="string_ci" indexed="true" stored="true" omitNorms="true"/>
    <field name="run_number" type="int" indexed="true" stored="true" omitNorms="true"/>

    <field name="team_id" type="int" indexed="true" stored="true" omitNorms="true"/>
    <field name="team_name" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="team_name_sort" type="string_ci" indexed="true" stored="true" omitNorms="true"/>
    <field name="team_name_search" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true"/>

    <field name="equipment_id" type="int" indexed="true" stored="true" omitNorms="true"/>
    <field name="equipment_name" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="equipment_name_sort" type="string_ci" indexed="true" stored="true" omitNorms="true"/>
    <field name="equipment_name_search" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true"/>

    <field name="equipment_number" type="int" indexed="true" stored="true" omitNorms="true"/>
    <field name="equipment_number_sort" type="int" indexed="true" stored="true" omitNorms="true"/>
    <field name="equipment_number_search" type="string_ci" indexed="true" stored="true" omitNorms="true"/>

    <field name="equipment_mes_name" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="equipment_mes_name_sort" type="string_ci" indexed="true" stored="true" omitNorms="true"/>
    <field name="equipment_mes_name_search" type="text_general_edge_ngram" indexed="true" stored="true"
           omitNorms="true"/>

    <field name="equipment_default_name" type="text" indexed="true" stored="true" omitNorms="true"/>
    <field name="equipment_default_name_sort" type="string_ci" indexed="true" stored="true" omitNorms="true"/>
    <field name="equipment_default_name_search" type="text_general_edge_ngram" indexed="true" stored="true"
           omitNorms="true"/>

    <field name="equipment_active" type="boolean" indexed="true" stored="true" omitNorms="true"/>
    <field name="equipment_active_text" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="equipment_active_in_mes" type="boolean" indexed="true" stored="true" omitNorms="true"/>
    <field name="equipment_active_in_mes_text" type="string" indexed="true" stored="true" omitNorms="true"/>

    <field name="equipment_module_id" type="int" indexed="true" stored="true" omitNorms="true" multiValued="true"/>
    <field name="equipment_module_mes_name" type="string" indexed="true" stored="true" omitNorms="true"
           multiValued="true"/>
    <field name="equipment_module_name" type="text" indexed="true" stored="true" omitNorms="true"
           multiValued="true"/>
    <field name="equipment_module_name_search" type="text_general_edge_ngram" indexed="true" stored="true"
           omitNorms="true" multiValued="true"/>
    d
    <field name="facility_id" type="int" indexed="true" stored="true" omitNorms="true"/>
    <field name="facility_name" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="facility_name_sort" type="string_ci" indexed="true" stored="true" omitNorms="true"/>
    <field name="facility_name_search" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true"/>
    <field name="facility_label" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="facility_label_sort" type="string_ci" indexed="true" stored="true" omitNorms="true"/>
    <field name="facility_label_search" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true"/>

    <field name="area_id" type="int" indexed="true" stored="true" omitNorms="true"/>
    <field name="area_name" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="area_name_sort" type="string_ci" indexed="true" stored="true" omitNorms="true"/>
    <field name="area_name_search" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true"/>
    <field name="area_label" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="area_label_sort" type="string_ci" indexed="true" stored="true" omitNorms="true"/>
    <field name="area_label_search" type="text_general_edge_ngram" indexed="true" stored="true" omitNorms="true"/>

    <field name="trained_users_id" type="int" indexed="true" stored="true" multiValued="true"/>
    <field name="trained_users_name" type="string" indexed="true" stored="true" multiValued="true"/>
    <field name="role_users_id" type="int" indexed="true" stored="true" multiValued="true"/>
    <field name="role_users_name" type="string" indexed="true" stored="true" multiValued="true"/>

    <field name="recurring" type="int" indexed="true" stored="true" omitNorms="true"/>
    <field name="recurring_name" type="string" indexed="true" stored="true" omitNorms="true"/>
    <field name="is_recurring" type="boolean" indexed="true" stored="true" omitNorms="true"/>
    <field name="is_recurring_text" type="string" indexed="true" stored="true" omitNorms="true"/>

    <field name="has_recurring_link" type="boolean" indexed="true" stored="true" omitNorms="true"/>


    <!-- catchall field, containing all other searchable text fields (implemented
        via copyField further on in this schema  -->
    <field name="text" type="text" indexed="true" stored="false" multiValued="true"/>

    <!-- catchall text field that indexes tokens both normally and in reverse for efficient
        leading wildcard queries. -->
    <field name="text_rev" type="text_general_rev" indexed="true" stored="false" multiValued="true"/>

    <dynamicField name="*_i" type="int" indexed="true" stored="true"/>
    <dynamicField name="*_is" type="int" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="*_s" type="string" indexed="true" stored="true"/>
    <dynamicField name="*_ss" type="string" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="*_l" type="long" indexed="true" stored="true"/>
    <dynamicField name="*_ls" type="long" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="*_t" type="text" indexed="true" stored="true"/>
    <dynamicField name="*_txt" type="text" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="*_en" type="text_en" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="*_b" type="boolean" indexed="true" stored="true"/>
    <dynamicField name="*_bs" type="boolean" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="*_f" type="float" indexed="true" stored="true"/>
    <dynamicField name="*_fs" type="float" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="*_d" type="double" indexed="true" stored="true"/>
    <dynamicField name="*_ds" type="double" indexed="true" stored="true" multiValued="true"/>

    <!-- Type used to index the lat and lon components for the "location" FieldType -->
    <dynamicField name="*_coordinate" type="tdouble" indexed="true" stored="false"/>

    <dynamicField name="*_dt" type="date" indexed="true" stored="true"/>
    <dynamicField name="*_dts" type="date" indexed="true" stored="true" multiValued="true"/>

    <!-- some trie-coded dynamic fields for faster range queries -->
    <dynamicField name="*_ti" type="tint" indexed="true" stored="true"/>
    <dynamicField name="*_tl" type="tlong" indexed="true" stored="true"/>
    <dynamicField name="*_tf" type="tfloat" indexed="true" stored="true"/>
    <dynamicField name="*_td" type="tdouble" indexed="true" stored="true"/>
    <dynamicField name="*_tdt" type="tdate" indexed="true" stored="true"/>

    <uniqueKey>id</uniqueKey>

    <fieldType name="string" class="solr.StrField" sortMissingLast="true"/>

    <!-- boolean type: "true" or "false" -->
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>

    <fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="tint" class="solr.TrieIntField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="date" class="solr.TrieDateField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="tdate" class="solr.TrieDateField" precisionStep="6" positionIncrementGap="0"/>
    <fieldType name="binary" class="solr.BinaryField"/>
    <fieldType name="random" class="solr.RandomSortField" indexed="true"/>

    <fieldType name="string_ci" class="solr.TextField"
               sortMissingLast="true" omitNorms="true">
        <analyzer>
            <tokenizer class="solr.KeywordTokenizerFactory"/>
            <filter class="solr.LowerCaseFilterFactory"/>
        </analyzer>
    </fieldType>

    <!-- A text field that only splits on whitespace for exact matching of words -->
    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100">
        <analyzer>
            <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        </analyzer>
    </fieldType>

    <fieldType name="text_general_edge_ngram" class="solr.TextField" positionIncrementGap="100">
        <analyzer type="index">
            <tokenizer class="solr.LowerCaseTokenizerFactory"/>
            <filter class="solr.EdgeNGramFilterFactory" minGramSize="2" maxGramSize="15"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer class="solr.LowerCaseTokenizerFactory"/>
        </analyzer>
    </fieldType>

    <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
        <analyzer type="index">
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
            <filter class="solr.LowerCaseFilterFactory"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
            <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
            <filter class="solr.LowerCaseFilterFactory"/>
        </analyzer>
    </fieldType>

    <fieldType name="text_en" class="solr.TextField" positionIncrementGap="100">
        <analyzer type="index">
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.StopFilterFactory"
                    ignoreCase="true"
                    words="lang/stopwords_en.txt"
            />
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.EnglishPossessiveFilterFactory"/>
            <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
            <filter class="solr.PorterStemFilterFactory"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
            <filter class="solr.StopFilterFactory"
                    ignoreCase="true"
                    words="lang/stopwords_en.txt"
            />
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.EnglishPossessiveFilterFactory"/>
            <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
            <filter class="solr.PorterStemFilterFactory"/>
        </analyzer>
    </fieldType>

    <fieldType name="text_en_splitting" class="solr.TextField" positionIncrementGap="100"
               autoGeneratePhraseQueries="true">
        <analyzer type="index">
            <tokenizer class="solr.WhitespaceTokenizerFactory"/>
            <filter class="solr.StopFilterFactory"
                    ignoreCase="true"
                    words="lang/stopwords_en.txt"
            />
            <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1"
                    catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
            <filter class="solr.PorterStemFilterFactory"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer class="solr.WhitespaceTokenizerFactory"/>
            <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
            <filter class="solr.StopFilterFactory"
                    ignoreCase="true"
                    words="lang/stopwords_en.txt"
            />
            <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1"
                    catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
            <filter class="solr.PorterStemFilterFactory"/>
        </analyzer>
    </fieldType>

    <fieldType name="text_en_splitting_tight" class="solr.TextField" positionIncrementGap="100"
               autoGeneratePhraseQueries="true">
        <analyzer>
            <tokenizer class="solr.WhitespaceTokenizerFactory"/>
            <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="false"/>
            <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
            <filter class="solr.WordDelimiterFilterFactory" generateWordParts="0" generateNumberParts="0"
                    catenateWords="1" catenateNumbers="1" catenateAll="0"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
            <filter class="solr.EnglishMinimalStemFilterFactory"/>
            <!-- this filter can remove any duplicate tokens that appear at the same position - sometimes
             possible with WordDelimiterFilter in conjuncton with stemming. -->
            <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
        </analyzer>
    </fieldType>

    <fieldType name="text_general_rev" class="solr.TextField" positionIncrementGap="100">
        <analyzer type="index">
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.ReversedWildcardFilterFactory" withOriginal="true"
                    maxPosAsterisk="3" maxPosQuestion="2" maxFractionAsterisk="0.33"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
            <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
            <filter class="solr.LowerCaseFilterFactory"/>
        </analyzer>
    </fieldType>
</schema>
